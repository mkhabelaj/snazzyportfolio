{"version":3,"file":"image/index.js","mappings":"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","sources":["webpack:///./blocks/src/image/edit.js","webpack:///external window [\"wp\",\"blockEditor\"]","webpack:///external window [\"wp\",\"blocks\"]","webpack:///external window [\"wp\",\"components\"]","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./blocks/src/image/index.js"],"sourcesContent":["import {\n  useBlockProps,\n  InspectorControls,\n  MediaUpload,\n  MediaUploadCheck,\n} from \"@wordpress/block-editor\";\nimport {\n  Button,\n  PanelBody,\n  PanelRow,\n  Panel,\n  SelectControl,\n  CheckboxControl,\n} from \"@wordpress/components\";\n\nconst options = [\n  { value: \"sm\", label: \"Small\" },\n  { value: \"lg\", label: \"Large\" },\n  { value: \"xl\", label: \"Extra Large\" },\n  { value: \"2xl\", label: \"2X Large\" },\n  { value: \"3xl\", label: \"3X Large\" },\n];\nexport default function EditComponent(props) {\n  const blockProps = useBlockProps();\n\n  function onFileSelect(image) {\n    props.setAttributes({\n      imgID: image.id,\n    });\n  }\n\n  return (\n    <>\n      <InspectorControls>\n        <Panel header=\"Snazzy Image Settings & Uploads\">\n          <PanelBody title=\"Snazzy Upload\" initialOpen>\n            <PanelRow>\n              <MediaUploadCheck>\n                <MediaUpload\n                  onSelect={onFileSelect}\n                  value={props.attributes.imgID}\n                  render={({ open }) => (\n                    <Button onClick={open}>Choose Image</Button>\n                  )}\n                />\n              </MediaUploadCheck>\n            </PanelRow>\n          </PanelBody>\n          <PanelBody title=\"Snazzy Image Settings\" initialOpen>\n            <PanelRow>\n              <SelectControl\n                label=\"Image Size\"\n                value={props.attributes.size}\n                options={options}\n                onChange={(value) => props.setAttributes({ size: value })}\n              />\n            </PanelRow>\n            <PanelRow>\n              <CheckboxControl\n                label=\"Center Image\"\n                checked={props.attributes.center}\n                onChange={(value) => props.setAttributes({ center: value })}\n              />\n            </PanelRow>\n            <PanelRow>\n              <CheckboxControl\n                label=\"Full Width\"\n                checked={props.attributes.fullWidth}\n                onChange={(value) => props.setAttributes({ fullWidth: value })}\n              />\n            </PanelRow>\n            <PanelRow>\n              <CheckboxControl\n                label=\"Auto Height\"\n                checked={props.attributes.autoHeight}\n                onChange={(value) => props.setAttributes({ autoHeight: value })}\n              />\n            </PanelRow>\n          </PanelBody>\n        </Panel>\n      </InspectorControls>\n      <div {...blockProps}>\n        <p className=\"sp-font-inter sp-text-3xl sp-text-center sp-font-bold\">\n          {props.attributes.text}\n        </p>\n      </div>\n    </>\n  );\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\nimport metadata from \"./block.json\";\nimport Edit from \"./edit\";\n\nregisterBlockType(metadata.name, {\n  edit: Edit,\n});\n"],"names":["useBlockProps","InspectorControls","MediaUpload","MediaUploadCheck","Button","PanelBody","PanelRow","Panel","SelectControl","CheckboxControl","options","value","label","EditComponent","props","blockProps","onFileSelect","image","setAttributes","imgID","id","React","createElement","Fragment","header","title","initialOpen","onSelect","attributes","render","_ref","open","onClick","size","onChange","checked","center","fullWidth","autoHeight","className","text","registerBlockType","metadata","Edit","name","edit"],"sourceRoot":""}