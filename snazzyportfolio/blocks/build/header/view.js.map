{"version":3,"file":"header/view.js","mappings":";;;;;;;;;AAAA;;;;;;SCAA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACN6D;AAE7DA,+DAAK,CAAC,cAAc,EAAE;EACpBE,OAAO,EAAE;IACPC,eAAe,WAAfA,eAAeA,CAAA,EAAG;MAChB,IAAMC,OAAO,GAAGH,oEAAU,CAAC,CAAC;MAC5BI,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BF,OAAO,CAACG,eAAe,GAAG,CAACH,OAAO,CAACG,eAAe;MAClD,IAAIH,OAAO,CAACG,eAAe,EAAE;QAC3BC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;QACvC;MACF;MACAH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,OAAO;IACxC;EACF;AACF,CAAC,CAAC,C","sources":["webpack:///external module \"@wordpress/interactivity\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./blocks/src/header/view.js"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { store, getContext } from \"@wordpress/interactivity\";\n\nstore(\"navbarPlugin\", {\n  actions: {\n    toggleMobileNav() {\n      const context = getContext();\n      console.log(\"toggleMobileNav\");\n      context.isMobileNavOpen = !context.isMobileNavOpen;\n      if (context.isMobileNavOpen) {\n        document.body.style.overflow = \"hidden\";\n        return;\n      }\n      document.body.style.overflow = \"unset\";\n    },\n  },\n});\n"],"names":["store","getContext","actions","toggleMobileNav","context","console","log","isMobileNavOpen","document","body","style","overflow"],"sourceRoot":""}