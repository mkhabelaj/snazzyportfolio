{"version":3,"file":"info/index.js","mappings":";;;;;;;;;;;;;;;;;;;AAIiC;AAMF;AACP;AAExB,IAAMQ,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAO,CAAC,EACtC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAO,CAAC,EACnC;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAO,CAAC,CAClC;AACc,SAASC,IAAIA,CAAAC,IAAA,EAAmD;EAAA,IAAAC,eAAA,GAAAD,IAAA,CAAhDE,UAAU;IAAIC,IAAI,GAAAF,eAAA,CAAJE,IAAI;IAAEC,OAAO,GAAAH,eAAA,CAAPG,OAAO;IAAIC,aAAa,GAAAL,IAAA,CAAbK,aAAa;EACzE,IAAMC,UAAU,GAAGlB,sEAAa,CAAC,CAAC;EAClC,oBACEmB,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,qBACEF,KAAA,CAAAC,aAAA,CAACnB,sEAAiB,qBAChBkB,KAAA,CAAAC,aAAA,CAACf,wDAAK,qBACJc,KAAA,CAAAC,aAAA,CAACjB,4DAAS;IAACmB,KAAK,EAAC,wBAAwB;IAACC,WAAW;EAAA,gBACnDJ,KAAA,CAAAC,aAAA,CAAChB,2DAAQ,qBACPe,KAAA,CAAAC,aAAA,CAACd,gEAAa;IACZG,KAAK,EAAC,MAAM;IACZe,OAAO,EAAEhB,OAAQ;IACjBE,KAAK,EAAEK,IAAK;IACZU,QAAQ,EAAE,SAAVA,QAAQA,CAAGf,KAAK;MAAA,OAAKO,aAAa,CAAC;QAAEF,IAAI,EAAEL;MAAM,CAAC,CAAC;IAAA;EAAC,CACrD,CACO,CACD,CACN,CACU,CAAC,eACpBS,KAAA,CAAAC,aAAA,QAASF,UAAU,eACjBC,KAAA,CAAAC,aAAA,CAAClB,6DAAQ;IACPwB,OAAO,EAAC,GAAG;IACXC,SAAS,EAAC,6FAA6F;IACvGjB,KAAK,EAAEM,OAAQ;IACfS,QAAQ,EAAE,SAAVA,QAAQA,CAAGf,KAAK;MAAA,OAAKO,aAAa,CAAC;QAAED,OAAO,EAAEN;MAAM,CAAC,CAAC;IAAA;EAAC,CACxD,CACE,CACL,CAAC;AAEP;;;;;;;;;;AC9CA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA,cAAc,aAAa,+CAA+C,gDAAgD,eAAe,QAAQ,IAAI,0CAA0C,yCAAyC,SAAgB,gBAAgB,wCAAwC,IAAI,mDAAmD,SAAS,iEAAe,IAAI;;;;;;;;;;;;;;;;UCAnY;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNsD;AAClB;AACV;AAE1BkB,oEAAiB,CAACC,6CAAa,EAAE;EAC/BE,IAAI,EAAEpB,6CAAIA;AACZ,CAAC,CAAC,C","sources":["webpack:///./blocks/src/info/edit.js","webpack:///external window [\"wp\",\"blockEditor\"]","webpack:///external window [\"wp\",\"blocks\"]","webpack:///external window [\"wp\",\"components\"]","webpack:///./node_modules/clsx/dist/clsx.mjs","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./blocks/src/info/index.js"],"sourcesContent":["import {\n  useBlockProps,\n  InspectorControls,\n  RichText,\n} from \"@wordpress/block-editor\";\nimport {\n  PanelBody,\n  PanelRow,\n  Panel,\n  SelectControl,\n} from \"@wordpress/components\";\nimport clsx from \"clsx\";\n\nconst OPTIONS = [\n  { label: \"Infomation\", value: \"info\" },\n  { label: \"Warning\", value: \"warn\" },\n  { label: \"Error\", value: \"erro\" },\n];\nexport default function Edit({ attributes: { type, content }, setAttributes }) {\n  const blockProps = useBlockProps();\n  return (\n    <>\n      <InspectorControls>\n        <Panel>\n          <PanelBody title=\"Select Info Block Type\" initialOpen>\n            <PanelRow>\n              <SelectControl\n                label=\"Type\"\n                options={OPTIONS}\n                value={type}\n                onChange={(value) => setAttributes({ type: value })}\n              />\n            </PanelRow>\n          </PanelBody>\n        </Panel>\n      </InspectorControls>\n      <div {...blockProps}>\n        <RichText\n          tagName=\"p\"\n          className=\"sp-text-md project-paragraph sp-whitespace-pre-wrap sp-my-5 sp-font-medium sp-leading-tight\"\n          value={content}\n          onChange={(value) => setAttributes({ content: value })}\n        />\n      </div>\n    </>\n  );\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\nimport metadata from \"./block.json\";\nimport Edit from \"./edit\";\n\nregisterBlockType(metadata.name, {\n  edit: Edit,\n});\n"],"names":["useBlockProps","InspectorControls","RichText","PanelBody","PanelRow","Panel","SelectControl","clsx","OPTIONS","label","value","Edit","_ref","_ref$attributes","attributes","type","content","setAttributes","blockProps","React","createElement","Fragment","title","initialOpen","options","onChange","tagName","className","registerBlockType","metadata","name","edit"],"sourceRoot":""}